import { reqFormatter } from '../utility';

export const createGoodOptions = (logger) => {
    const eventFilter = {
        request: '*',
        log: '*',
        response: '*',
        error: '*'
    };

    return {
        includes: {
            request: ['headers', 'payload'],
            response: ['payload']
        },
        ops: {
            interval: 2160000
        },
        reporters: {
            bunyan: [
                {
                    module: 'good-squeeze',
                    name: 'Squeeze',
                    args: [eventFilter]
                },
                {
                    module: 'good-bunyan',
                    args: [
                        eventFilter,
                        {
                            logger,
                            formatters: {
                                request: reqFormatter
                            }
                        }
                    ]
                }
            ]
        }
    };
};

/**
 * create production level plugins for server
 * @param  {func} logger   logger function generated by bunyan.createLogger
 * @return {[object]}      returns all plugins that will be used in server manifest (prod)
 */
export const createProdPlugins = (logger) => {
    const goodOptions = createGoodOptions(logger);
    return [
        {
            plugin: {
                register: 'good',
                options: goodOptions
            }
        }
    ];
};
